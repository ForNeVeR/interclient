# The contents of this file are subject to the Interbase Public
# License Version 1.0 (the "License"); you may not use this file
# except in compliance with the License. You may obtain a copy
# of the License at http://www.Inprise.com/IPL.html
#
# Software distributed under the License is distributed on an
# "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, either express
# or implied. See the License for the specific language governing
# rights and limitations under the License.
#
# The Original Code was created by Inprise Corporation
# and its predecessors. Portions created by Inprise Corporation are
# Copyright (C) Inprise Corporation.
# All Rights Reserved.
# Contributor(s): ______________________________________.
.SUFFIXES:
.SUFFIXES: .cpp .o

# Purify related flags
PFLAGS   = -messages=first -leaks-at-exit=yes -cache-dir=.
PDIR     = `purify -print-home-dir`
PSTUBS   = $(PDIR)/purify_stubs.a
PURIFY   = purify $(PFLAGS)

#QFLAGS	 = -threads=yes				# use if threads in app
QFLAGS	 = 
QDIR     = `quantify -print-home-dir`
QSTUBS   = $(QDIR)/quantify_stubs.a
#QUANTIFY = quantify $(QFLAGS)

PLFLAGS  = 
#PURELINK = purelink $(PLFLAGS)

# Tool builds should run as owner of directory containing the gds library
# Order of libraries is crucial, -ljibs must precede -lrwtool
# LDLIBS=	-L/usr/local/lib/rogue -lrwtool -lgds_b -lnsl -lsocket -ldl -lthread
LDLIBS=		-lgds_b -lnsl -lsocket -ldl -lthread

# interserver and interbase directory links should exist in the INCLUDES directory.
INCLUDES=	-I/usr/local/include

# ARCH_32/ARCH_64 for 32/64 bit processors
# WORDS_BIGENDIAN CDR uses this define to determine if the host is BIGENDIAN
# USE_INETD 	negotiate with inetd
# DEBUG		Set this if don't like infectious creepy crawlies in your code
# IB_USER_API   Set this if you want to use JIBS as a user API.
# NODOUBLEFORK  !!!
# SYS5		!!!
# FUTURE_CODE   for experimenting with code that you don't yet want in driver.
# JDBC_EXTENSION for JDBC extensions.

# For Debug and Development, using inetd
CCFLAGS= 	-g -DUNIX -DUSE_INETD -DNODOUBLEFORK -DSYS5 -DARCH_32 -DWORDS_BIGENDIAN

# For Debug and Development, no inetd
# CCFLAGS= 	-g -DUNIX -DDEBUG -DNODOUBLEFORK -DSYS5 -DARCH_32 -DWORDS_BIGENDIAN

# For Demos and Product
#CCFLAGS= 	-O -DUSE_INETD -DUNIX -DNODOUBLEFORK -DSYS5 -DARCH_32 -DWORDS_BIGENDIAN

CC=		CC

OBJS=		IB_Connection.o IB_Transaction.o IB_Statement.o \
		IB_DataBuffer.o IB_InputBuffer.o IB_ResultSet.o \
		IB_Buffer.o Vector.o \
		IB_ConnectionConfiguration.o IB_TransactionConfiguration.o \
		IB_Information.o IB_ConnectionInformation.o IB_TransactionInformation.o \
		IB_Status.o IB_SQLException.o IB_DataTruncation.o \
		IB_Types.o IB_LDString.o IB_LDBytes.o IB_Blob.o IB_Array.o IB_Catalog.o \
		JIBSRemote.o Session.o \
		JIBSNet.o interserver.o NetTCP.o Error.o CDR.o
	 	
HDRS=		IB_Connection.h IB_Transaction.h IB_Statement.h \
		IB_DataBuffer.h IB_InputBuffer.h IB_ResultSet.h \
		IB_Buffer.h Vector.h \
		IB_ConnectionConfiguration.h IB_TransactionConfiguration.h \
		IB_Information.h IB_ConnectionInformation.h IB_TransactionInformation.h \
		IB_Status.h IB_SQLException.h IB_DataTruncation.h \
		IB_Types.h IB_LDString.h IB_LDBytes.h IB_Blob.h IB_Array.h \
		IB_Defines.h IB_Catalog.h \
		JIBSRemote.h MessageCodes.h Session.h \
		JIBSNet.h NetTCP.h Error.h CDR.h

OBJS_OPTS=	PerformanceStatistics.o EventAlerter.o

OBJS_TESTS=	test_apifull.o test_events.o test_perfs.o test_transactions.o

.cpp.o:			
		$(CC) $(CCFLAGS) $(INCLUDES) -c $*.cpp -o $*.o

.o:
		$(CC) $(CCFLAGS) $(INCLUDES) $*.o -o $* $(LDLIBS)

.cpp:
		$(CC) $(CCFLAGS) $(INCLUDES) -c $*.cpp -o $*.o
		$(CC) $(CCFLAGS) $(INCLUDES) $*.o -o $* $(LDLIBS)

interserver:	$(OBJS)
		$(RUNAS) $(PURELINK) $(QUANTIFY) $(PURIFY) $(CC) $(OBJS) -o interserver $(LDLIBS) $(PSTUBS) $(QSTUBS)

lib:		$(OBJS)
		$(CC) -xar $(OBJS) -o /usr/local/lib/libjibs.a

tests:		$(OBJS_TESTS)

clean:
		rm -f *.o core
		rm -rf Templates.DB

IB_Connection.o:		IB_Defines.h IB_Connection.h IB_SQLException.h IB_LDString.h \
				IB_Transaction.h IB_ConnectionConfiguration.h \
				IB_Status.h IB_Statement.h IB_ResultSet.h

IB_Transaction.o:		IB_Defines.h IB_Transaction.h IB_Connection.h \
				IB_TransactionConfiguration.h \
				IB_SQLException.h IB_Status.h

IB_Statement.o:			IB_Defines.h IB_Statement.h IB_Transaction.h IB_Connection.h IB_ResultSet.h \
				IB_SQLException.h IB_Status.h IB_Types.h IB_LDString.h \
				IB_Information.h IB_InputBuffer.h IB_Blob.h IB_Array.h

IB_DataBuffer.o:		IB_Defines.h IB_DataBuffer.h IB_SQLException.h IB_Status.h

IB_InputBuffer.o:		IB_Defines.h IB_InputBuffer.h IB_SQLException.h IB_DataBuffer.h \
				IB_Statement.h

IB_ResultSet.o:			IB_Defines.h IB_ResultSet.h IB_Statement.h \
				IB_SQLException.h IB_DataBuffer.h IB_LDString.h \
				IB_DataTruncation.h IB_Status.h IB_Types.h

IB_Buffer.o:			IB_Defines.h IB_Buffer.h IB_SQLException.h IB_Status.h

IB_ConnectionConfiguration.o:	IB_Defines.h IB_ConnectionConfiguration.h \
				IB_SQLException.h IB_LDString.h IB_Status.h

IB_TransactionConfiguration.o:	IB_Defines.h IB_TransactionConfiguration.h \
				IB_SQLException.h IB_LDString.h IB_Status.h

IB_Information.o:		IB_Defines.h IB_Information.h IB_SQLException.h IB_Buffer.h IB_Status.h

IB_ConnectionInformation.o:	IB_Defines.h IB_ConnectionInformation.h IB_Status.h \
				IB_Information.h IB_Connection.h IB_SQLException.h \
				IB_LDString.h

IB_TransactionInformation.o:	IB_Defines.h IB_TransactionInformation.h IB_Status.h \
				IB_Information.h IB_Transaction.h IB_SQLException.h

IB_Status.o:			IB_Defines.h IB_Status.h IB_SQLException.h

IB_SQLException.o: 		IB_Defines.h IB_SQLException.h IB_Status.h

IB_DataTruncation.o: 		IB_Defines.h IB_DataTruncation.h IB_SQLException.h

IB_Types.o:			IB_Defines.h IB_Types.h IB_LDBytes.h IB_LDString.h IB_SQLException.h

IB_LDString.o:			IB_Defines.h IB_LDString.h

IB_LDBytes.o:			IB_Defines.h IB_LDBytes.h

IB_Blob.o:			IB_Defines.h IB_Blob.h IB_Statement.h IB_Connection.h \
				IB_Transaction.h IB_SQLException.h IB_Status.h 

IB_Array.o:			IB_Defines.h IB_Array.h IB_Statement.h IB_Connection.h \
				IB_Transaction.h IB_SQLException.h IB_Status.h 

Vector.o:			Vector.h
IB_Catalog.o:			IB_Catalog.h IB_Statement.h IB_ResultSet.h IB_Connection.h \
 				IB_Transaction.h IB_Status.h IB_SQLException.h IB_Defines.h 

Session.o:	IB_Defines.h Session.h IB_Defines.h IB_Connection.h IB_Transaction.h \
		IB_ConnectionConfiguration.h IB_TransactionConfiguration.h \
		IB_Status.h IB_LDString.h IB_LDBytes.h IB_Statement.h IB_ResultSet.h IB_ConnectionInformation.h

JIBSRemote.o:	IB_Defines.h JIBSRemote.h Session.h JIBSNet.o IB_Statement.h IB_ResultSet.h \
		IB_SQLException.h MessageCodes.h IB_Blob.h IB_Array.h IB_Types.h IB_Catalog.h

NetTCP.o:	NetTCP.h Error.h
interserver.o:	JIBSRemote.h Error.h NetTCP.h
Error.o:	Error.h
JIBSNet.o:   	IB_Defines.h JIBSNet.h IB_LDString.h IB_LDBytes.h MessageCodes.h CDR.h \
		Error.h NetTCP.h IB_Blob.h IB_Array.h
CDR.o: 		CDR.h

# IBPP_OPTS
PerformanceStatistics.o:    PerformanceStatistics.h IB_Connection.h
EventAlerter.o:		    EventAlerter.h IB_Connection.h IB_SQLException.h IB_Status.h

